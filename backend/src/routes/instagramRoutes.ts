import { Router, Request, Response } from 'express';
import { authenticateToken } from './authRoutes';
import { UserService } from '../services/userService';
import { LocationParser } from '../parsers/locationParser';
import { log } from '../utils/helpers';
import fs from 'fs';
import path from 'path';

const router = Router();
const userService = new UserService();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Instagram –∞–∫–∫–∞—É–Ω—Ç–∞
router.post('/connect', authenticateToken, async (req: any, res: Response) => {
  let locationParser: LocationParser | null = null;
  
  try {
    const userId = req.user.userId;
    log(`üîó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${req.user.email} –ø–æ–¥–∫–ª—é—á–∞–µ—Ç Instagram –∞–∫–∫–∞—É–Ω—Ç`);

    // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    locationParser = new LocationParser(false); // –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è —Ä—É—á–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await locationParser.init();
    
    log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Instagram');
    log('üîê –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤–æ–π—Ç–∏ –≤ Instagram –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –±—Ä–∞—É–∑–µ—Ä–µ');

    // –û—Ç–≤–µ—á–∞–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—á–∞—Ç
    res.json({
      success: true,
      message: '–ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –í–æ–π–¥–∏—Ç–µ –≤ Instagram –∏ –Ω–∞–∂–º–∏—Ç–µ Enter –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ —Å–µ—Ä–≤–µ—Ä–∞.',
      status: 'browser_opened'
    });

    // –í —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∂–¥–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    // (—ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –º–µ—Ö–∞–Ω–∏–∑–º)
    setTimeout(async () => {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
        const isConnected = await checkInstagramConnection(locationParser!);
        
        if (isConnected) {
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
          await userService.updateInstagramStatus(userId, true, 'connected_user');
          log(`‚úÖ Instagram –ø–æ–¥–∫–ª—é—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${req.user.email}`);
        }
      } catch (error) {
        log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Instagram: ${error}`, 'error');
      } finally {
        if (locationParser) {
          await locationParser.close();
        }
      }
    }, 5000);

  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Instagram: ${error}`, 'error');
    
    if (locationParser) {
      await locationParser.close();
    }
    
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Instagram'
    });
  }
});

// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Instagram –∞–∫–∫–∞—É–Ω—Ç–∞
router.post('/disconnect', authenticateToken, async (req: any, res: Response) => {
  try {
    const userId = req.user.userId;
    log(`üîå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${req.user.email} –æ—Ç–∫–ª—é—á–∞–µ—Ç Instagram –∞–∫–∫–∞—É–Ω—Ç`);

    // –£–¥–∞–ª—è–µ–º cookies Instagram –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await clearInstagramSession(userId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ
    await userService.updateInstagramStatus(userId, false);
    
    res.json({
      success: true,
      message: 'Instagram –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω'
    });

  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Instagram: ${error}`, 'error');
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Instagram'
    });
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
router.get('/status', authenticateToken, async (req: any, res: Response) => {
  try {
    const userId = req.user.userId;
    const user = await userService.getUserById(userId);
    
    if (!user) {
      return res.status(404).json({
        success: false,
        message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
      });
    }

    res.json({
      success: true,
      connected: user.instagramConnected,
      username: user.instagramUsername
    });

  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Instagram: ${error}`, 'error');
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞'
    });
  }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function checkInstagramConnection(parser: LocationParser): Promise<boolean> {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ–º –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º Instagram
    await parser.page.goto('https://www.instagram.com/', { waitUntil: 'networkidle2' });
    
    const isLoggedIn = await parser.page.evaluate(() => {
      // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
      return !document.querySelector('input[name="username"]') &&
             document.querySelector('[data-testid="user-avatar"]') !== null;
    });

    return isLoggedIn;
  } catch (error) {
    return false;
  }
}

async function clearInstagramSession(userId: string): Promise<void> {
  try {
    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª cookies –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const cookiesPath = path.join(__dirname, `../../data/users/${userId}/instagram_cookies.json`);
    if (fs.existsSync(cookiesPath)) {
      fs.unlinkSync(cookiesPath);
      log(`üóëÔ∏è Cookies Instagram —É–¥–∞–ª–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    }
  } catch (error) {
    log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è cookies: ${error}`, 'warn');
  }
}

export default router;