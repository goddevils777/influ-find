import { Router, Request, Response } from 'express';
import { authenticateToken } from './authRoutes';
import { UserService } from '../services/userService';
import { LocationParser } from '../parsers/locationParser';
import { log } from '../utils/helpers';
import fs from 'fs';
import path from 'path';

const router = Router();
const userService = new UserService();

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Instagram –∞–∫–∫–∞—É–Ω—Ç–∞
router.post('/connect', authenticateToken, async (req: any, res: Response) => {
  let browser: any = null;
  let proxyUrl: string = '';
  let useProxyChain: boolean = false;
  
  try {
    const userId = req.user.userId;
    log(`üîó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${req.user.email} –ø–æ–¥–∫–ª—é—á–∞–µ—Ç Instagram –∞–∫–∫–∞—É–Ω—Ç`);

    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = await userService.getUserById(userId);
    
    if (!user || !user.proxyConnected || !user.proxyConfig) {
      return res.status(400).json({
        success: false,
        message: '–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Instagram –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø—Ä–æ–∫—Å–∏. –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ –ø—Ä–æ–∫—Å–∏.'
      });
    }

    log(`üîó –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ ${user.proxyConfig.host}:${user.proxyConfig.port}`);

    const puppeteer = require('puppeteer-extra');
    const StealthPlugin = require('puppeteer-extra-plugin-stealth');
    const ProxyChain = require('proxy-chain');
    
    puppeteer.use(StealthPlugin());

    // –î–ª—è SOCKS5 –∏—Å–ø–æ–ª—å–∑—É–µ–º proxy-chain –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ HTTP
    if (user.proxyConfig.type === 'socks5') {
      log('üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º SOCKS5 –≤ HTTP –ø—Ä–æ–∫—Å–∏ —á–µ—Ä–µ–∑ proxy-chain...');
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º SOCKS5 URL
      let socksUrl = 'socks5://';
      if (user.proxyConfig.username && user.proxyConfig.password) {
        socksUrl += `${encodeURIComponent(user.proxyConfig.username)}:${encodeURIComponent(user.proxyConfig.password)}@`;
      }
      socksUrl += `${user.proxyConfig.host}:${user.proxyConfig.port}`;
      
      log(`üîó SOCKS5 URL: ${socksUrl}`);
      
      // –°–æ–∑–¥–∞–µ–º HTTP –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–∫—Å–∏—Ä—É–µ—Ç —á–µ—Ä–µ–∑ SOCKS5
      proxyUrl = await ProxyChain.anonymizeProxy(socksUrl);
      useProxyChain = true;
      log(`‚úÖ –°–æ–∑–¥–∞–Ω –ª–æ–∫–∞–ª—å–Ω—ã–π HTTP –ø—Ä–æ–∫—Å–∏: ${proxyUrl}`);
    } else {
  // –î–ª—è HTTP/HTTPS –ø—Ä–æ–∫—Å–∏ - –ù–ï –≤–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ URL
  proxyUrl = `${user.proxyConfig.type}://${user.proxyConfig.host}:${user.proxyConfig.port}`;
}

// –§–æ—Ä–º–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞
const launchOptions: any = {
  headless: false, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  args: [
    '--no-sandbox',
    '--disable-setuid-sandbox',
    '--disable-blink-features=AutomationControlled',
    '--start-maximized',
    `--proxy-server=${proxyUrl}`
  ]
};

log(`üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –ø—Ä–æ–∫—Å–∏: ${proxyUrl}`);

browser = await puppeteer.launch(launchOptions);
const page = await browser.newPage();

// –î–ª—è HTTP/HTTPS –ø—Ä–æ–∫—Å–∏ –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É–µ–º authenticate
if ((user.proxyConfig.type === 'http' || user.proxyConfig.type === 'https') && 
    user.proxyConfig.username && user.proxyConfig.password) {
  await page.authenticate({
    username: user.proxyConfig.username,
    password: user.proxyConfig.password
  });
  log(`üîê –ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∫—Å–∏: ${user.proxyConfig.username}`);
}

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º User-Agent
    await page.setUserAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º IP
    try {
      await page.goto('https://httpbin.org/ip', { waitUntil: 'networkidle2', timeout: 15000 });
      const ipInfo = await page.evaluate(() => {
        try {
          return JSON.parse(document.body.innerText);
        } catch {
          return { origin: 'unknown' };
        }
      });
      log(`üåê –ë—Ä–∞—É–∑–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç IP: ${ipInfo.origin}`);
    } catch (ipError) {
      log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å IP: ${ipError}`, 'warn');
    }

// –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–∫–∞—Ü–∏–π –∏ –ª–æ–≥–∏–Ω–∞
// –ü—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Instagram
log('üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É Instagram...');
await page.goto('https://www.instagram.com/', {
  waitUntil: 'networkidle2',
  timeout: 30000
});

// –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
await new Promise(resolve => setTimeout(resolve, 3000));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
const mainPageInfo = await page.evaluate(() => {
  return {
    title: document.title,
    url: window.location.href,
    hasError: document.body.innerText.includes('429') || document.body.innerText.includes('–Ω–µ –ø—Ä–∞—Ü—é—î'),
    hasInstagramContent: document.body.innerText.toLowerCase().includes('instagram'),
    hasLoginButton: !!document.querySelector('a[href*="/accounts/login/"]')
  };
});

log(`üìä –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Instagram: ${JSON.stringify(mainPageInfo)}`);

if (mainPageInfo.hasError) {
  log(`‚ùå Instagram –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø—Ä–æ–∫—Å–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ`, 'error');
  
  await browser.close();
  
  return res.status(400).json({
    success: false,
    message: 'Instagram –±–ª–æ–∫–∏—Ä—É–µ—Ç –≤–∞—à –ø—Ä–æ–∫—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–∫—Å–∏.',
    error: 'proxy_blocked'
  });
}

if (!mainPageInfo.hasInstagramContent) {
  log(`‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ`, 'error');
  
  await browser.close();
  
  return res.status(400).json({
    success: false,
    message: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ Instagram –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.',
    error: 'page_load_error'
  });
}

log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ Instagram –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
log('üîê –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "Log in" –≤ –±—Ä–∞—É–∑–µ—Ä–µ –∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç');



    log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Instagram —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏');
    log('üîê –í–æ–π–¥–∏—Ç–µ –≤ Instagram –≤ –æ—Ç–∫—Ä—ã–≤—à–µ–º—Å—è –±—Ä–∞—É–∑–µ—Ä–µ');

    // –û—Ç–≤–µ—á–∞–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–∞—á–∞—Ç
    res.json({
      success: true,
      message: '–ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏. –í–æ–π–¥–∏—Ç–µ –≤ Instagram, –∑–∞—Ç–µ–º –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä.',
      status: 'browser_opened',
      proxyUsed: `${user.proxyConfig.host}:${user.proxyConfig.port}`
    });

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ cookies –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    const cookiesPath = path.join(__dirname, `../../data/users/${userId}`);
    if (!fs.existsSync(cookiesPath)) {
      fs.mkdirSync(cookiesPath, { recursive: true });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
    const checkAuth = setInterval(async () => {
      try {
        const currentUrl = page.url();
        
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—à–µ–ª —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ª–æ–≥–∏–Ω–∞ - –∑–Ω–∞—á–∏—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è
        if (!currentUrl.includes('/accounts/login/')) {
          log('üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–ª—Å—è –≤ Instagram!');
          

          // –ò –∑–∞–º–µ–Ω–∏ –Ω–∞:
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies
          const cookies = await page.cookies();
          const instagramCookies = cookies.filter((cookie: any) => 
            cookie.domain.includes('instagram.com')
          );

          if (instagramCookies.length > 0) {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ —á—Ç–æ –æ–∂–∏–¥–∞–µ—Ç CookieManager
            const cookieData = {
              cookies: instagramCookies,
              savedAt: new Date().toISOString(),
              userAgent: await page.evaluate(() => navigator.userAgent)
            };
            
            fs.writeFileSync(
              path.join(cookiesPath, 'instagram_cookies.json'), 
              JSON.stringify(cookieData, null, 2)
            );
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ cookies
            const criticalCookies = instagramCookies.filter((cookie: any) =>
              ['sessionid', 'ds_user_id', 'csrftoken'].includes(cookie.name)
            );
            
            log(`üîë –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ cookies: ${instagramCookies.length} –æ–±—â–∏—Ö, ${criticalCookies.length} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö`);
            log(`üîë –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ: ${criticalCookies.map((c: any) => c.name).join(', ')}`);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            let instagramUsername = 'connected_user';
            try {
              instagramUsername = await page.evaluate(() => {
                // –ò—â–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
                const usernameElement = document.querySelector('a[href^="/"][href$="/"]') ||
                                      document.querySelector('[data-testid="user-avatar"]') ||
                                      document.querySelector('header a[href^="/"]');
                return usernameElement?.getAttribute('href')?.replace(/\//g, '') || 'connected_user';
              });
            } catch (e) {
              // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–æ–ª—É—á–µ–Ω–∏—è username
            }

            await userService.updateInstagramStatus(userId, true, instagramUsername);
            log(`‚úÖ Instagram –ø–æ–¥–∫–ª—é—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${req.user.email} (@${instagramUsername}) - cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã`);
            
            clearInterval(checkAuth);
          }
        }
      } catch (error) {
        // –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
        clearInterval(checkAuth);
      }
    }, 5000);

    // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    browser.on('disconnected', async () => {
      log('üîÑ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç');
      clearInterval(checkAuth);
      
      if (useProxyChain && proxyUrl) {
        try {
          await ProxyChain.closeAnonymizedProxy(proxyUrl, true);
          log('üóëÔ∏è –õ–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä –∑–∞–∫—Ä—ã—Ç');
        } catch (error) {
          log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä–∞: ${error}`, 'warn');
        }
      }
    });

  } catch (error: any) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Instagram: ${error}`, 'error');
    
    if (browser) {
      await browser.close();
    }
    
    if (useProxyChain && proxyUrl) {
      try {
        const ProxyChain = require('proxy-chain');
        await ProxyChain.closeAnonymizedProxy(proxyUrl, true);
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
      }
    }
    
    res.status(500).json({
      success: false,
      message: `–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Instagram: ${error?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
    });
  }
});

// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Instagram –∞–∫–∫–∞—É–Ω—Ç–∞
router.post('/disconnect', authenticateToken, async (req: any, res: Response) => {
  try {
    const userId = req.user.userId;
    log(`üîå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${req.user.email} –æ—Ç–∫–ª—é—á–∞–µ—Ç Instagram –∞–∫–∫–∞—É–Ω—Ç`);

    // –£–¥–∞–ª—è–µ–º cookies Instagram –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await clearInstagramSession(userId);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –±–∞–∑–µ
    await userService.updateInstagramStatus(userId, false);
    
    res.json({
      success: true,
      message: 'Instagram –∞–∫–∫–∞—É–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω'
    });

  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Instagram: ${error}`, 'error');
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Instagram'
    });
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
router.get('/status', authenticateToken, async (req: any, res: Response) => {
  try {
    const userId = req.user.userId;
    const user = await userService.getUserById(userId);
    
    if (!user) {
      return res.status(404).json({
        success: false,
        message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
      });
    }

    res.json({
      success: true,
      connected: user.instagramConnected,
      username: user.instagramUsername
    });

  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ Instagram: ${error}`, 'error');
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞'
    });
  }
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function checkInstagramConnection(parser: LocationParser): Promise<boolean> {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–∂–µ–º –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º Instagram
    await parser.page.goto('https://www.instagram.com/', { waitUntil: 'networkidle2' });
    
    const isLoggedIn = await parser.page.evaluate(() => {
      // –ò—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
      return !document.querySelector('input[name="username"]') &&
             document.querySelector('[data-testid="user-avatar"]') !== null;
    });

    return isLoggedIn;
  } catch (error) {
    return false;
  }
}

async function clearInstagramSession(userId: string): Promise<void> {
  try {
    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª cookies –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const cookiesPath = path.join(__dirname, `../../data/users/${userId}/instagram_cookies.json`);
    if (fs.existsSync(cookiesPath)) {
      fs.unlinkSync(cookiesPath);
      log(`üóëÔ∏è Cookies Instagram —É–¥–∞–ª–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    }
  } catch (error) {
    log(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è cookies: ${error}`, 'warn');
  }
}

export default router;