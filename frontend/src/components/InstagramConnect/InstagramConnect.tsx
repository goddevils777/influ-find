import React, { useState } from 'react';
import axios from 'axios';
import { useAuth } from '../../contexts/AuthContext';
import styles from './InstagramConnect.module.css';

const InstagramConnect: React.FC = () => {
  const { user, updateUser } = useAuth();
  const [connecting, setConnecting] = useState(false);
  const [error, setError] = useState('');

const handleConnectInstagram = async () => {
  setConnecting(true);
  setError('');

  try {
    // –î–û–ë–ê–í–õ–Ø–ï–ú –¢–ò–ü–ò–ó–ê–¶–ò–Æ –î–õ–Ø –û–¢–í–ï–¢–ê:
    const response = await axios.post<{
      success: boolean;
      message?: string;
      username?: string;
      status?: string;
    }>('http://localhost:3001/api/instagram/connect');
    
    if (response.data.success) {
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      updateUser({ 
        instagramConnected: true,
        instagramUsername: response.data.username 
      });
    } else {
      setError(response.data.message || '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Instagram');
    }
  } catch (error: any) {
    console.error('Instagram connection error:', error);
    setError(error.response?.data?.message || '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Instagram');
  } finally {
    setConnecting(false);
  }
};

const handleDisconnectInstagram = async () => {
  try {
    const response = await axios.post<{
      success: boolean;
      message?: string;
    }>('http://localhost:3001/api/instagram/disconnect');
    
    if (response.data.success) {
      updateUser({ 
        instagramConnected: false,
        instagramUsername: undefined 
      });
    }
  } catch (error: any) {
    console.error('Instagram disconnect error:', error);
    setError('–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è Instagram');
  }
};

  if (user?.instagramConnected) {
    return (
      <div className={styles.connectionCard}>
        <div className={styles.connectedHeader}>
          <div className={styles.statusIcon}>‚úÖ</div>
          <div>
            <h3>Instagram –ø–æ–¥–∫–ª—é—á–µ–Ω</h3>
            <p>–ê–∫–∫–∞—É–Ω—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞</p>
          </div>
        </div>
        
        <div className={styles.actions}>
          <button
            onClick={handleDisconnectInstagram}
            className={styles.disconnectButton}
          >
            –û—Ç–∫–ª—é—á–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className={styles.connectionCard}>
      <div className={styles.disconnectedHeader}>
        <div className={styles.statusIcon}>‚ùå</div>
        <div>
          <h3>Instagram –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω</h3>
          <p>–ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞</p>
        </div>
      </div>

      {error && (
        <div className={styles.error}>
          {error}
        </div>
      )}

      <div className={styles.actions}>
        <button
          onClick={handleConnectInstagram}
          disabled={connecting}
          className={styles.connectButton}
        >
          {connecting ? (
            <>
              <div className={styles.spinner}></div>
              –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...
            </>
          ) : (
            'üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å Instagram'
          )}
        </button>
      </div>

      <div className={styles.instructions}>
        <h4>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h4>
        <ol>
          <li>–ù–∞–∂–º–∏—Ç–µ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å Instagram"</li>
          <li>–û—Ç–∫—Ä–æ–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä —Å —Ñ–æ—Ä–º–æ–π –≤—Ö–æ–¥–∞ Instagram</li>
          <li>–í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç</li>
          <li>–í–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –∞–∫–∫–∞—É–Ω—Ç –±—É–¥–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω</li>
        </ol>
      </div>
    </div>
  );
};

export default InstagramConnect;